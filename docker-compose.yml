version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: event_service_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - event_service_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: event_service_app
    environment:
      CONFIG_PATH: "/app/local.yaml"
    ports:
      - "8081:8081"
    depends_on:
      - postgres
    networks:
      - event_service_network

  nginx:
    image: nginx:alpine
    container_name: event_service_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    networks:
      - event_service_network

  migrate:
    image: migrate/migrate
    container_name: event_service_migrate
    volumes:
      - ./migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "postgresql://admin:admin@postgres:5432/postgres?sslmode=disable",
      "up"
    ]
    depends_on:
      - postgres
    networks:
      - event_service_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: always
    networks:
      - event_service_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: always
    networks:
      - event_service_network

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  event_service_network: